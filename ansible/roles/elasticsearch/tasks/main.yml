---
- name: set up confd templates
  include_role:
    name: utils
    tasks_from: setup-confd
  vars:
    parentRole: elasticsearch

- name: install tools
  apt:
    name: ['openjdk-8-jdk', 'openjdk-8-dbg', 'unzip']
    state: present
    update_cache: no

- name: install jq
  include_role:
    name: utils
    tasks_from: install-jq
  vars:
    jqVersion: "1.6"

- name: install service
  include_role:
    name: utils
    tasks_from: install-pkg
  vars:
    version: "{{ elkVersion }}"
    parentRole: elasticsearch
  loop:
    - pkgUrl: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ version }}.tar.gz"
  loop_control:
    loop_var: opts

- name: install plugins
  include_tasks: install-plugin.yml
  loop:
    - name: analysis-icu
    - name: analysis-ik
      url: "https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v{{ elkVersion }}/elasticsearch-analysis-ik-{{ elkVersion }}.zip"
    - name: analysis-kuromoji
    - name: analysis-phonetic
    - name: analysis-pinyin
      url: "https://github.com/medcl/elasticsearch-analysis-pinyin/releases/download/v{{ elkVersion }}/elasticsearch-analysis-pinyin-{{ elkVersion }}.zip"
    - name: ingest-attachment
    - name: mapper-murmur3
    - name: mapper-size
    - name: repository-hdfs
    - name: repository-s3
    - name: sql
      url: "https://github.com/NLPchina/elasticsearch-sql/releases/download/{{ elkVersion }}.0/elasticsearch-sql-{{ elkVersion }}.0.zip"
  loop_control:
    loop_var: opts

- name: copy configuration files
  include_role:
    name: utils
    tasks_from: copy-conf
  vars:
    parentRole: elasticsearch

- name: prepare scripts directory
  file:
    path: /opt/app/conf/elasticsearch/scripts
    owner: "{{ role_name }}"
    group: svc
    state: directory

- name: prepare analysis directory
  file:
    src: /data/elasticsearch/analysis
    dest: /opt/app/conf/elasticsearch/analysis
    force: yes
    owner: "{{ role_name }}"
    group: svc
    state: link

- name: prepare dict directory
  file:
    path: /opt/elasticsearch/current/plugins/analysis-ik/config/custom
    owner: root
    group: svc
    state: directory

- name: check if jieba dic exists
  stat:
    path: "{{ role_path }}/files/tmp/jieba.dic"
  register: jieba_dic
  delegate_to: localhost

- name: download jieba dict
  get_url:
    url: "https://github.com/QingCloudAppcenter/elk-archived/raw/master/docker-image/standard/elasticsearch/dicts/jieba.dic"
    dest: "{{ role_path }}/files/tmp/jieba.dic"
  delegate_to: localhost
  when: jieba_dic.stat.exists == False

- name: copy jieba dict
  copy:
    src: "{{ role_path }}/files/tmp/jieba.dic"
    dest: "/opt/elasticsearch/current/plugins/analysis-ik/config/custom/jieba.dic"
    owner: root
    group: svc
    mode: u=rw,go=r

- name: check if package file exists
  stat:
    path: "{{ role_path }}/files/tmp/extra_stopword.dic"
  register: stopword_dic
  delegate_to: localhost

- name: download dict for IKAnalyzer
  get_url:
    url: "https://github.com/QingCloudAppcenter/elk-archived/raw/master/docker-image/standard/elasticsearch/dicts/stop_words.dic"
    dest: "{{ role_path }}/files/tmp/extra_stopword.dic"
  delegate_to: localhost
  when: stopword_dic.stat.exists == False

- name: copy extra stopword dict
  copy:
    src: "{{ role_path }}/files/tmp/extra_stopword.dic"
    dest: "/opt/elasticsearch/current/plugins/analysis-ik/config/custom/extra_stopword.dic"
    owner: root
    group: svc
